# Avoid downloading protobuf twice:
build --proto_toolchain_for_java="@com_google_protobuf//:java_toolchain"
# Run with a persistent scalac worker. See: https://github.com/bazelbuild/rules_scala#getting-started
build --strategy=Scalac=worker
test --strategy=Scalac=worker

# Build with as much future compatibility as possible
# See https://docs.bazel.build/versions/master/skylark/backward-compatibility.html
# TODO We have protobuf 3.6.1 in the WORKSPACE but an older protobuf is causing the errors below. Why?
build --incompatible_bzl_disallow_load_after_statement
build --incompatible_depset_is_not_iterable
build --incompatible_depset_union
build --incompatible_disable_deprecated_attr_params=false     # Fixed in protobuf 3.6.1
build --incompatible_disable_objc_provider_resources
build --incompatible_disallow_conflicting_providers
build --incompatible_disallow_data_transition
build --incompatible_disallow_dict_plus
build --incompatible_disallow_filetype
build --incompatible_disallow_legacy_javainfo=false           # See: https://github.com/bazelbuild/rules_scala/issues/513
build --incompatible_disallow_old_style_args_add
build --incompatible_disallow_slash_operator
build --incompatible_expand_directories
build --incompatible_generate_javacommon_source_jar
build --incompatible_new_actions_api
build --incompatible_no_support_tools_in_action_inputs=false  # See: https://github.com/bazelbuild/rules_scala/issues/596
build --incompatible_no_transitive_loads
build --incompatible_package_name_is_a_function=false         # Fixed in protobuf 3.6.1
build --incompatible_range_type
build --incompatible_remove_native_git_repository
build --incompatible_remove_native_http_archive
build --incompatible_static_name_resolution
build --incompatible_string_is_not_iterable

